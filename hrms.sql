-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.email_verifications
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 999999 CACHE 1 ),
    user_id integer NOT NULL,
    email_verification boolean NOT NULL,
    CONSTRAINT email_verifications_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.employers
(
    employer_id integer NOT NULL,
    company_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "webSite" character varying(70) COLLATE pg_catalog."default" NOT NULL,
    phone_number character varying(25) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT employers_pkey PRIMARY KEY (employer_id)
);

CREATE TABLE IF NOT EXISTS public.hrms_employees
(
    employee_id integer NOT NULL,
    name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT hrms_employees_pkey PRIMARY KEY (employee_id)
);

CREATE TABLE IF NOT EXISTS public.hrms_verifications
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 999999 CACHE 1 ),
    employer_id integer NOT NULL,
    hrms_verification boolean NOT NULL,
    CONSTRAINT hrms_verifications_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.job_positions
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 999999 CACHE 1 ),
    job_position text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT job_positions_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.job_seekers
(
    job_seeker_id integer NOT NULL,
    name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    tckn character(11) COLLATE pg_catalog."default" NOT NULL,
    birth_date date NOT NULL,
    CONSTRAINT job_seekers_pkey PRIMARY KEY (job_seeker_id)
);

CREATE TABLE IF NOT EXISTS public.mernis_verification
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 999999 CACHE 1 ),
    job_seeker_id integer NOT NULL,
    verification boolean NOT NULL,
    CONSTRAINT mernis_verification_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 999999 CACHE 1 ),
    user_id integer NOT NULL,
    email character varying(50) COLLATE pg_catalog."default" NOT NULL,
    password character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT users_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.email_verifications
    ADD CONSTRAINT user_id FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.employers
    ADD CONSTRAINT employer_id FOREIGN KEY (employer_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS employers_pkey
    ON public.employers(employer_id);


ALTER TABLE IF EXISTS public.hrms_employees
    ADD CONSTRAINT hrms_employee_id FOREIGN KEY (employee_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS hrms_employees_pkey
    ON public.hrms_employees(employee_id);


ALTER TABLE IF EXISTS public.hrms_verifications
    ADD CONSTRAINT employer_id FOREIGN KEY (employer_id)
    REFERENCES public.employers (employer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.job_seekers
    ADD CONSTRAINT job_seeker_id FOREIGN KEY (job_seeker_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS job_seekers_pkey
    ON public.job_seekers(job_seeker_id);


ALTER TABLE IF EXISTS public.mernis_verification
    ADD CONSTRAINT job_seeker_id FOREIGN KEY (job_seeker_id)
    REFERENCES public.job_seekers (job_seeker_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;
